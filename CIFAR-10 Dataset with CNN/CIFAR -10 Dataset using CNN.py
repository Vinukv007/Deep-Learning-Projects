# -*- coding: utf-8 -*-
"""cifar10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sTdLrzOPNTR9PjKy8XW5eTtuXa263cUt
"""

import pandas as pd
import numpy as np
from keras.datasets import cifar10
from keras.layers import Dense, Flatten, Conv2D,MaxPool2D
from keras import Sequential
import matplotlib.pyplot as plt
from keras.utils import to_categorical

"""# Loading and understanding the data"""

help(cifar10)

(xtrain, ytrain), (xtest, ytest) = cifar10.load_data()

xtrain.shape

xtrain[0,:,:,0].shape

pd.DataFrame(xtrain[0,:,:,0])

for i in range(5):
  plt.imshow(xtrain[i])
  plt.show()
  print(ytrain[i])

"""# processing the data"""

xtrain=xtrain.astype('float32')
xtest=xtest.astype('float32')

xtrain=xtrain/255.0
xtest=xtest/255.0

ytrain=to_categorical(ytrain)
ytest=to_categorical(ytest)

"""# Building the model"""

model=Sequential()
model.add(Conv2D(64, (3, 3), activation='relu', input_shape=(32, 32, 3,)))
model.add(MaxPool2D((2,2)))
model.add(Flatten())
model.add(Dense(32, activation='relu'))
model.add(Dense(16, activation='relu'))
model.add(Dense(10, activation='softmax'))

model.compile(
    optimizer='adam', 
    loss='categorical_crossentropy', 
    metrics=['accuracy']
)

model.fit(xtrain, ytrain, batch_size=200,epochs=5)

model.evaluate(xtest, ytest)

